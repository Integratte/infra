// <auto-generated />
using System;
using Integratte.Infra.Testes.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Integratte.Infra.Testes.Migrations
{
    [DbContext(typeof(ContextoDoBancoDeDados))]
    partial class ContextoDoBancoDeDadosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CPF")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CPF" }, "IX_ExemploChaveUnica")
                        .IsUnique();

                    b.ToTable("Clientes", "TestesInfra");
                });

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdClientesDoTeste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CadastradoEm")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("IdDoCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDoTeste")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdDoCliente");

                    b.HasIndex("IdDoTeste");

                    b.ToTable("ClientesDoTeste", "TestesInfra");
                });

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdTeste", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testes", "TestesInfra");
                });

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdClientesDoTeste", b =>
                {
                    b.HasOne("Integratte.Infra.Testes.EntityFramework.EntidadeBdCliente", "Cliente")
                        .WithMany("TestesDesteCliente")
                        .HasForeignKey("IdDoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Integratte.Infra.Testes.EntityFramework.EntidadeBdTeste", "Teste")
                        .WithMany("ClientesDesteTeste")
                        .HasForeignKey("IdDoTeste")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Teste");
                });

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdCliente", b =>
                {
                    b.Navigation("TestesDesteCliente");
                });

            modelBuilder.Entity("Integratte.Infra.Testes.EntityFramework.EntidadeBdTeste", b =>
                {
                    b.Navigation("ClientesDesteTeste");
                });
#pragma warning restore 612, 618
        }
    }
}
